version: '3.8'

services:
  postgres:
    image: postgres:latest
    ports:
      - "5434:5432"
    volumes:
      - ./postgres/initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
      - ./postgres/migration.sql:/docker-entrypoint-initdb.d/migration.sql
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    networks:
      - my-network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - my-network

  api:
    build:
      context: ./api
    ports:
      - "3008:3008"
    environment:
      NODE_ENV: development
      REDIS_HOST: redis
      REDIS_PORT: 6379
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_PORT: 5432
    volumes:
      - ./api:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    networks:
      - my-network

  auth_service:
    build:
      context: ./authService
    ports:
      - "3003:3003"
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_PORT: 5432
    depends_on:
      - postgres
    networks:
      - my-network

  parser:
    build:
      context: ./parser
    ports:
      - "5000:5000"
    volumes:
      - ./parser:/app
    environment:
      FLASK_ENV: development
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - my-network

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - api
      - auth_service
      - postgres
    networks:
      - my-network

networks:
  my-network:
    driver: bridge

volumes:
  postgres-data: {}
  redis-data: {}
